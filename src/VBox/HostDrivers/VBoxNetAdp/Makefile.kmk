# $Id: Makefile.kmk $
## @file
# Sub-Makefile for the Network Adapter Driver (YokeNetAdp).
#

#
# Copyright (C) 2009-2012 Oracle Corporation
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

SUB_DEPTH = ../../../..
include $(KBUILD_PATH)/subheader.kmk

if1of ($(KBUILD_TARGET), solaris darwin linux freebsd)
 #
 # YokeNetAdp - Virtual Network Adapter
 # Note! On Solaris the name has to be <= 8 chars long.
 #
 ifdef VBOX_WITH_VBOXDRV
  SYSMODS += YokeNetAdp
  YokeNetAdp_TEMPLATE         = VBOXR0DRV
  YokeNetAdp_INST             = $(INST_VBOXNETADP)$(if $(eq $(KBUILD_TARGET),darwin),Contents/MacOS/)
  YokeNetAdp_DEBUG_INST.darwin= $(patsubst %/,%,$(INST_VBOXNETADP))
  YokeNetAdp_NAME.solaris     = yokenet
  YokeNetAdp_NAME.linux       = yokenetadp
  YokeNetAdp_NAME.freebsd     = yokenetadp
  YokeNetAdp_DEPS.solaris    += $(VBOX_SVN_REV_KMK)
  YokeNetAdp_DEFS             = IN_RT_R0 VBOX_SVN_REV=$(VBOX_SVN_REV) IN_SUP_STATIC
  YokeNetAdp_DEFS.linux       = KBUILD_MODNAME=KBUILD_STR\(yokenetadp\) KBUILD_BASENAME=KBUILD_STR\(yokenetadp\) MODULE
  #YokeNetAdp_LDFLAGS.darwin   = -v -Wl,-whyload -Wl,-v -Wl,-whatsloaded
  YokeNetAdp_LDFLAGS.solaris += -N misc/gld -N drv/vboxdrv
  YokeNetAdp_INCS.linux   := \
  	$(PATH_ROOT)/src/VBox/Runtime/r0drv/linux
  YokeNetAdp_INCS             = \
  	.
  YokeNetAdp_SOURCES.darwin   = \
  	darwin/VBoxNetAdp-darwin.cpp \
  	VBoxNetAdp.c
  YokeNetAdp_SOURCES.solaris  = \
  	solaris/VBoxNetAdp-solaris.c
  VBoxNetAdp_SOURCES.linux   = \
  	linux/VBoxNetAdp-linux.c \
  	VBoxNetAdp.c
  YokeNetAdp_SOURCES.freebsd   = \
  	freebsd/VBoxNetAdp-freebsd.c \
  	VBoxNetAdp.c
  YokeNetAdp_SOURCES          =
  #YokeNetAdp_SOURCES          = \
  #	YokeNetAdp.c
  YokeNetAdp_LIBS            += \
  	$(PATH_STAGE_LIB)/SUPR0IdcClient$(VBOX_SUFF_LIB)
 endif
endif

#
# Darwin extras.
#
ifeq ($(KBUILD_TARGET),darwin)
 INSTALLS += YokeNetAdp.kext
 YokeNetAdp.kext_INST     = $(INST_VBOXNETADP)Contents/
 YokeNetAdp.kext_SOURCES  = \
 	$(YokeNetAdp.kext_0_OUTDIR)/Info.plist
 YokeNetAdp.kext_CLEAN    = \
 	$(YokeNetAdp.kext_0_OUTDIR)/Info.plist

$$(YokeNetAdp.kext_0_OUTDIR)/Info.plist: $(PATH_SUB_CURRENT)/darwin/Info.plist $(VBOX_VERSION_MK) | $$(dir $$@)
	$(call MSG_GENERATE,YokeNetAdp,$@,$<)
	$(QUIET)$(RM) -f $@
	$(QUIET)$(SED) \
		-e 's/@VBOX_VERSION_STRING@/$(VBOX_VERSION_STRING)/g' \
		-e 's/@VBOX_VERSION_MAJOR@/$(VBOX_VERSION_MAJOR)/g' \
		-e 's/@VBOX_VERSION_MINOR@/$(VBOX_VERSION_MINOR)/g' \
		-e 's/@VBOX_VERSION_BUILD@/$(VBOX_VERSION_BUILD)/g' \
		-e 's/@VBOX_VENDOR@/$(VBOX_VENDOR)/g' \
		-e 's/@VBOX_PRODUCT@/$(VBOX_PRODUCT)/g' \
		-e 's/@VBOX_C_YEAR@/$(VBOX_C_YEAR)/g' \
		--output $@ \
		$<

 INSTALLS.darwin += Scripts-darwin-adp
 Scripts-darwin-adp_INST = $(INST_DIST)
 Scripts-darwin-adp_EXEC_SOURCES = \
 	darwin/loadnetadp.sh
endif # darwin

ifeq ($(KBUILD_TARGET),linux)
 #
 # Install source files for compilation on Linux.
 # files_vboxnetadp defines VBOX_VBOXNETADP_SOURCES.
 #
 INSTALLS += YokeNetAdp-src
 include $(PATH_SUB_CURRENT)/linux/files_vboxnetadp
 YokeNetAdp-src_INST    = bin/src/vboxnetadp/
 YokeNetAdp-src_SOURCES = \
	$(subst $(DQUOTE),,$(VBOX_VBOXNETADP_SOURCES)) \
	$(YokeNetAdp-src_0_OUTDIR)/Makefile
 YokeNetAdp-src_EXEC_SOURCES = \
	$(PATH_ROOT)/src/VBox/HostDrivers/linux/do_Module.symvers
 YokeNetAdp-src_CLEAN = \
	$(YokeNetAdp-src_0_OUTDIR)/Makefile \
	$(PATH_TARGET)/YokeNetAdp-src-1.dep \

 # Scripts needed for building the kernel modules
 includedep $(PATH_TARGET)/YokeNetAdp-src-1.dep
$$(YokeNetAdp-src_0_OUTDIR)/Makefile: \
		$(PATH_SUB_CURRENT)/linux/Makefile \
		$$(if $$(eq $$(YokeNetAdp/linux/Makefile_VBOX_HARDENED),$$(VBOX_WITH_HARDENING)),,FORCE) \
		| $$(dir $$@)
	$(QUIET)$(RM) -f -- $@
 ifndef VBOX_WITH_HARDENING
	$(QUIET)$(SED) -e "s;-DVBOX_WITH_HARDENING;;g" --output $@ $<
 else
	$(QUIET)$(CP) -f $< $@
 endif
	%$(QUIET2)$(APPEND) -t '$(PATH_TARGET)/YokeNetAdp-src-1.dep' 'YokeNetAdp/linux/Makefile_VBOX_HARDENED=$(VBOX_WITH_HARDENING)'


endif # linux

ifeq ($(KBUILD_TARGET),freebsd)
 #
 # Install source files for compilation on FreeBSD.
 # files_vboxnetadp defines VBOX_VBOXNETADP_SOURCES.
 #
 INSTALLS += YokeNetAdp-src
 include $(PATH_SUB_CURRENT)/freebsd/files_vboxnetadp
 YokeNetAdp-src_INST = bin/src/vboxnetadp/
 YokeNetAdp-src_SOURCES = \
	$(subst $(DQUOTE),,$(VBOX_VBOXNETADP_SOURCES)) \
	$(YokeNetAdp-src_0_OUTDIR)/Makefile
 YokeNetAdp-src_CLEAN = \
	$(YokeNetAdp-src_0_OUTDIR)/Makefile	\

$$(YokeNetAdp-src_0_OUTDIR)/Makefile: \
		$(PATH_SUB_CURRENT)/freebsd/Makefile \
		$$(if $$(eq $$(YokeNetAdp/freebsd/Makefile_VBOX_HARDENED),$$(VBOX_WITH_HARDENING)),,FORCE) \
		| $$(dir $$@)
	$(QUIET)$(RM) -f -- $@
 ifndef VBOX_WITH_HARDENING
	$(QUIET)$(SED) -e "s;-DVBOX_WITH_HARDENING;;g" --output $@ $<
 else
	$(QUIET)$(CP) -f $< $@
 endif

endif # freebsd

include $(FILE_KBUILD_SUB_FOOTER)

